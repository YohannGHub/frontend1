import React, { useState } from 'react';
import { 
  Zap, 
  Play, 
  Shield, 
  AlertTriangle,
  Search,
  Filter,
  Eye,
  Download,
  Settings,
  Info,
  Key
} from 'lucide-react';
import toast from 'react-hot-toast';

const Exploits: React.FC = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [categoryFilter, setCategoryFilter] = useState('all');
  const [selectedTarget, setSelectedTarget] = useState('');
  const [selectedTool, setSelectedTool] = useState<string | null>(null);
  const [isRunningExploit, setIsRunningExploit] = useState(false);

  const exploitTools = [
    {
      id: 'metasploit',
      name: 'Metasploit',
      description: 'Framework d\'exploitation de failles',
      icon: Zap,
      color: 'bg-purple-500',
      category: 'Exploitation Framework'
    },
    {
      id: 'hydra',
      name: 'Hydra',
      description: 'Bruteforce login SSH et autres services',
      icon: Key,
      color: 'bg-orange-500',
      category: 'Brute Force'
    },
    {
      id: 'sqlmap',
      name: 'SQLMap',
      description: 'Injection SQL automatisée',
      icon: Search,
      color: 'bg-yellow-500',
      category: 'Database Exploitation'
    },
    {
      id: 'beef',
      name: 'BeEF',
      description: 'Browser Exploitation Framework',
      icon: Zap,
      color: 'bg-red-500',
      category: 'Browser Exploitation'
    }
  ];

  const exploits = [
    {
      id: 'EXP-001',
      name: 'Apache HTTP Server RCE',
      category: 'Remote Code Execution',
      cve: 'CVE-2023-1234',
      difficulty: 'Medium',
      reliability: 'Excellent',
      target: '192.168.1.1:80',
      description: 'Exploits a buffer overflow vulnerability in Apache HTTP Server to achieve remote code execution.',
      payload: 'linux/x64/meterpreter/reverse_tcp',
      status: 'ready'
    },
    {
      id: 'EXP-002',
      name: 'SQL Injection Exploit',
      category: 'Database',
      cve: 'CVE-2023-5678',
      difficulty: 'Easy',
      reliability: 'Good',
      target: '192.168.1.5:443',
      description: 'Automated SQL injection exploit for extracting database contents.',
      payload: 'custom/sql_dump',
      status: 'ready'
    },
    {
      id: 'EXP-003',
      name: 'SSH Brute Force',
      category: 'Authentication',
      cve: 'N/A',
      difficulty: 'Easy',
      reliability: 'Average',
      target: '192.168.1.15:22',
      description: 'Dictionary-based SSH brute force attack with common credentials.',
      payload: 'auxiliary/scanner/ssh/ssh_login',
      status: 'running'
    },
    {
      id: 'EXP-004',
      name: 'Web Shell Upload',
      category: 'Web Application',
      cve: 'CVE-2023-9012',
      difficulty: 'Hard',
      reliability: 'Good',
      target: '192.168.1.10:80',
      description: 'Exploits file upload vulnerability to deploy web shell.',
      payload: 'php/meterpreter/reverse_tcp',
      status: 'completed'
    }
  ];

  const handleStartExploit = (toolId: string, toolName: string) => {
    if (!selectedTarget.trim()) {
      toast.error('Veuillez entrer une cible à exploiter');
      return;
    }

    setSelectedTool(toolId);
    setIsRunningExploit(true);
    toast.success(`Exploitation ${toolName} démarrée`);

    // Simulate exploit execution
    setTimeout(() => {
      setIsRunningExploit(false);
      setSelectedTool(null);
      toast.success(`Exploitation ${toolName} terminée`);
    }, 3000);
  };

  const ToolCard = ({ tool }: { tool: any }) => (
    <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200 group">
      <div className="flex items-start justify-between mb-4">
        <div className={`p-3 rounded-lg ${tool.color} group-hover:scale-110 transition-transform duration-200`}>
          <tool.icon className="h-6 w-6 text-white" />
        </div>
        <span className="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full">
          {tool.category}
        </span>
      </div>
      
      <h3 className="text-lg font-semibold text-gray-900 mb-2">{tool.name}</h3>
      <p className="text-gray-600 text-sm mb-4">{tool.description}</p>
      
      <div className="flex items-center space-x-2">
        <button
          onClick={() => handleStartExploit(tool.id, tool.name)}
          disabled={isRunningExploit && selectedTool === tool.id}
          className={`flex items-center px-4 py-2 rounded-lg text-white font-medium transition-colors duration-200 ${
            isRunningExploit && selectedTool === tool.id
              ? 'bg-gray-400 cursor-not-allowed'
              : `${tool.color} hover:opacity-90`
          }`}
        >
          <Play className="h-4 w-4 mr-2" />
          {isRunningExploit && selectedTool === tool.id ? 'En cours...' : 'Exploiter'}
        </button>
        
        <button className="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-50 transition-colors duration-200">
          <Settings className="h-4 w-4" />
        </button>
        
        <button className="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-50 transition-colors duration-200">
          <Info className="h-4 w-4" />
        </button>
      </div>
    </div>
  );

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case 'Easy':
        return 'bg-green-100 text-green-800';
      case 'Medium':
        return 'bg-yellow-100 text-yellow-800';
      case 'Hard':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getReliabilityColor = (reliability: string) => {
    switch (reliability) {
      case 'Excellent':
        return 'bg-green-100 text-green-800';
      case 'Good':
        return 'bg-blue-100 text-blue-800';
      case 'Average':
        return 'bg-yellow-100 text-yellow-800';
      case 'Poor':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'ready':
        return 'bg-blue-100 text-blue-800';
      case 'running':
        return 'bg-yellow-100 text-yellow-800';
      case 'completed':
        return 'bg-green-100 text-green-800';
      case 'failed':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const handleRunExploit = (exploitId: string) => {
    setIsRunningExploit(true);
    toast.success(`Démarrage de l'exploit ${exploitId}`);
    
    // Simulate exploit execution
    setTimeout(() => {
      setIsRunningExploit(false);
      toast.success('Exploit terminé avec succès');
    }, 3000);
  };

  const filteredExploits = exploits.filter(exploit => {
    const matchesSearch = exploit.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         exploit.id.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         exploit.cve.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = categoryFilter === 'all' || exploit.category === categoryFilter;
    
    return matchesSearch && matchesCategory;
  });

  return (
    <div className="p-6 space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Framework d'Exploitation</h1>
          <p className="text-gray-600 mt-1">Exécutez et gérez les exploits de sécurité</p>
        </div>
        <div className="flex items-center space-x-2 text-sm">
          <AlertTriangle className="h-5 w-5 text-red-500" />
          <span className="text-red-600 font-medium">Utiliser uniquement sur des cibles autorisées</span>
        </div>
      </div>

      {/* Warning Banner */}
      <div className="bg-red-50 border border-red-200 rounded-lg p-4">
        <div className="flex items-center">
          <Shield className="h-6 w-6 text-red-600 mr-3" />
          <div>
            <h3 className="text-red-800 font-semibold">Avertissement de Sécurité</h3>
            <p className="text-red-700 text-sm mt-1">
              Ces exploits ne doivent être utilisés que sur des systèmes que vous possédez ou pour lesquels vous avez une autorisation explicite de test. 
              Une utilisation non autorisée peut violer les lois et réglementations.
            </p>
          </div>
        </div>
      </div>

      {/* Target Configuration */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-6">Configuration de la Cible</h2>
        
        <div className="space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Hôte Cible
            </label>
            <input
              type="text"
              value={selectedTarget}
              onChange={(e) => setSelectedTarget(e.target.value)}
              placeholder="192.168.1.1 ou example.com"
              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200"
              disabled={isRunningExploit}
            />
          </div>
        </div>
      </div>

      {/* Exploitation Tools */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-6">Outils d'Exploitation</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {exploitTools.map(tool => (
            <ToolCard key={tool.id} tool={tool} />
          ))}
        </div>
      </div>

      {/* Filters and Search */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <div className="flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0">
          <div className="flex items-center space-x-4">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
              <input
                type="text"
                placeholder="Rechercher des exploits..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent w-64"
              />
            </div>
          </div>

          <div className="flex items-center space-x-4">
            <div className="flex items-center space-x-2">
              <Filter className="h-5 w-5 text-gray-400" />
              <select
                value={categoryFilter}
                onChange={(e) => setCategoryFilter(e.target.value)}
                className="border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="all">Toutes Catégories</option>
                <option value="Remote Code Execution">Exécution de Code à Distance</option>
                <option value="Database">Base de Données</option>
                <option value="Authentication">Authentification</option>
                <option value="Web Application">Application Web</option>
              </select>
            </div>
          </div>
        </div>
      </div>

      {/* Exploits List */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200">
        <div className="p-6 border-b border-gray-200">
          <h2 className="text-xl font-semibold text-gray-900">
            Exploits Disponibles ({filteredExploits.length})
          </h2>
        </div>

        <div className="divide-y divide-gray-200">
          {filteredExploits.map((exploit) => (
            <div key={exploit.id} className="p-6 hover:bg-gray-50 transition-colors duration-200">
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="flex items-center space-x-3 mb-2">
                    <h3 className="text-lg font-semibold text-gray-900">{exploit.name}</h3>
                    <span className="px-3 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                      {exploit.category}
                    </span>
                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${getStatusColor(exploit.status)}`}>
                      {exploit.status.toUpperCase()}
                    </span>
                  </div>

                  <div className="flex items-center space-x-6 text-sm text-gray-600 mb-3">
                    <span><strong>ID:</strong> {exploit.id}</span>
                    <span><strong>CVE:</strong> {exploit.cve}</span>
                    <span><strong>Cible:</strong> {exploit.target}</span>
                  </div>

                  <p className="text-gray-700 mb-3">{exploit.description}</p>

                  <div className="flex items-center space-x-4 mb-3">
                    <div className="flex items-center space-x-2">
                      <span className="text-sm font-medium text-gray-700">Difficulté:</span>
                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getDifficultyColor(exploit.difficulty)}`}>
                        {exploit.difficulty}
                      </span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <span className="text-sm font-medium text-gray-700">Fiabilité:</span>
                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getReliabilityColor(exploit.reliability)}`}>
                        {exploit.reliability}
                      </span>
                    </div>
                  </div>

                  <div className="bg-gray-50 border border-gray-200 rounded-lg p-3">
                    <p className="text-sm text-gray-700">
                      <strong>Payload:</strong> {exploit.payload}
                    </p>
                  </div>
                </div>

                <div className="flex items-center space-x-2 ml-6">
                  <button 
                    onClick={() => handleRunExploit(exploit.id)}
                    disabled={isRunningExploit || exploit.status === 'running'}
                    className="flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 text-sm font-medium"
                  >
                    <Zap className="h-4 w-4 mr-2" />
                    {exploit.status === 'running' ? 'En cours...' : 'Exécuter'}
                  </button>
                  <button className="p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors duration-200">
                    <Eye className="h-5 w-5" />
                  </button>
                  <button className="p-2 text-gray-600 hover:bg-gray-50 rounded-lg transition-colors duration-200">
                    <Settings className="h-5 w-5" />
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Exploit Console */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Console d'Exploitation</h2>
        <div className="bg-gray-900 rounded-lg p-4 font-mono text-sm">
          <div className="text-green-400">
            {'msf6 exploit(multi/http/apache_normalize_path_rce) > show options'}
          </div>
          <div className="text-white mt-2">
            Options du module (exploit/multi/http/apache_normalize_path_rce):
          </div>
          <div className="text-gray-300 mt-2">
            Nom        Paramètre Actuel  Requis  Description<br/>
            ----       ---------------  --------  -----------<br/>
            RHOSTS     192.168.1.1      oui       L'hôte cible<br/>
            RPORT      80               oui       Le port cible<br/>
            TARGETURI  /                oui       Chemin vers le script CGI
          </div>
          <div className="text-green-400 mt-4">
            {'msf6 exploit(multi/http/apache_normalize_path_rce) > exploit'}
          </div>
          <div className="text-yellow-400 mt-2">
            [*] Gestionnaire TCP inverse démarré sur 192.168.1.100:4444<br/>
            [*] Envoi de l'étape (3045348 octets) vers 192.168.1.1<br/>
            [*] Session Meterpreter 1 ouverte
          </div>
        </div>
      </div>
    </div>
  );
};

export default Exploits;
